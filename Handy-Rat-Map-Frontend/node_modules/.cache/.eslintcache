[{"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/index.js":"1","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/App.js":"2","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/Loading_Spinner.js":"3","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyCard.js":"4","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/Map.js":"5","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/CompanyApi.js":"6","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/Place_Definer.js":"7","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Pointer/Pointer.js":"8","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Pointer/AddBTN.js":"9","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyFinderAPI/Finder.js":"10","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Decode_Api/geocode.js":"11","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyFinderAPI/ClickableMarker.js":"12","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/ImageViewer.js":"13","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/ImageSelector.js":"14","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/ImageEdit.js":"15","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/Image_preview.js":"16"},{"size":290,"mtime":1633487418090,"results":"17","hashOfConfig":"18"},{"size":5365,"mtime":1634016742628,"results":"19","hashOfConfig":"18"},{"size":211,"mtime":1633836932292,"results":"20","hashOfConfig":"18"},{"size":2757,"mtime":1637592641916,"results":"21","hashOfConfig":"18"},{"size":2061,"mtime":1633839079883,"results":"22","hashOfConfig":"18"},{"size":101,"mtime":1637588722392,"results":"23","hashOfConfig":"18"},{"size":5749,"mtime":1634022954224,"results":"24","hashOfConfig":"18"},{"size":349,"mtime":1633825956022,"results":"25","hashOfConfig":"18"},{"size":421,"mtime":1634022877241,"results":"26","hashOfConfig":"18"},{"size":98,"mtime":1637588727821,"results":"27","hashOfConfig":"18"},{"size":234,"mtime":1630835933095,"results":"28","hashOfConfig":"18"},{"size":652,"mtime":1637588721818,"results":"29","hashOfConfig":"18"},{"size":2899,"mtime":1633834454833,"results":"30","hashOfConfig":"18"},{"size":1705,"mtime":1634019122407,"results":"31","hashOfConfig":"18"},{"size":1310,"mtime":1634022995365,"results":"32","hashOfConfig":"18"},{"size":875,"mtime":1630121443657,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1yfib6m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/index.js",[],["74","75"],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/App.js",["76","77","78","79","80"],"import React, { useEffect, useState } from \"react\";\n\nimport CompanyApi from \"../CompanyApi\";\nimport geocode from \"../Decode_Api/geocode\";\nimport Finder from \"./CompanyFinderAPI/Finder\";\n\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport CompanyCard from \"./CompanyCard\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(\"\");\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [CompanyCreateState, setCompanyCreateState] = useState(0); //Not submit:0, submiting:1, Sucess:2, Fail:3\n  const [DefinerMessage, setDefinerMessage] = useState(null);\n  const [SurroundingCompany, setSurroundingCompany] = useState([]);\n  const [Error, setError] = useState(null);\n  const [CompanyCardState, setCompanyCardState] = useState(0);\n  const [CompanyDisplayed, setCompanyDisplayed] = useState(\n    {\n      Lat: null,\n      Lng: null,\n      ShopName: null,\n      ShopType: null,\n      ShopDescription: null,\n      Addr: null,\n      _id: null,\n      ImageSrc: []\n    });\n\n\n\n  const setMarkers = async () => {\n    const Response = await Finder.get(\"/Company/SurroundingCompany\", {\n      params: {\n        Lng: CurrentLng,\n        Lat: CurrentLat\n      }\n    })\n    console.log(`Response`);\n    if (SurroundingCompany.length !== Response.data.length) {\n      setSurroundingCompany(Response.data);\n    }\n  }\n\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng, DefinerVis])\n\n  useEffect(() => {\n    const TimeoutID = setTimeout(setMarkers, 200);\n    return () => {\n      clearTimeout(TimeoutID);\n    };\n  }, [CurrentLat, CurrentLng])\n\n  useEffect(setMarkers, [])\n\n  useEffect(() => { setPosition() }, [])\n\n\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async (ShopDetail) => {\n    setCompanyCreateState(1);\n    try {\n      const response = await CompanyApi.post(\"/Company/CreateCompany\", ShopDetail)\n      setCompanyCreateState(2);\n    } catch (err) {\n      setCompanyCreateState(3);\n      setDefinerMessage(err.message);\n    }\n    setTimeout(() => {\n      setMarkers();\n      setCompanyCreateState(0);\n      setDefinerVis(false);\n      console.log(\"closed\");\n    }, 2000);\n  };\n\n  const GetAndSetDetailAddress = async (Lat, Lng) => {\n    const reponse = await geocode.get(\"\", {\n      params: {\n        latlng: `${Lat},${Lng}`\n      }\n    });\n    console.log(reponse.data.results[0].formatted_address.toString());\n\n    setAddress(reponse.data.results[0].formatted_address.toString());\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const OnMarkerClick = async (e) => {\n    let CompanyClicked = {\n      Lat: null,\n      Lng: null,\n      ShopName: null,\n      ShopType: null,\n      ShopDescription: null,\n      Addr: null,\n      _id: null,\n      ImageSrc: [],\n    };\n\n    CompanyClicked.Lat = e.Lat;\n    CompanyClicked.Lng = e.Lng;\n    CompanyClicked.ShopName = e.ShopName;\n    CompanyClicked.ShopType = e.ShopType;\n    CompanyClicked.ShopDescription = e.ShopDescription;\n    CompanyClicked.Addr = e.Addr;\n    CompanyClicked._id = e._id;\n    setCompanyCardState(1);\n    setCompanyDisplayed(CompanyClicked);\n\n    const Response = await Finder.get(\"/Company/GetCompanyImage\",\n      {\n        params: {\n          id: e._id\n        }\n      }\n    )\n    CompanyClicked.ImageSrc = Response.data.ImageSrc;\n    setCompanyCardState(2);\n    setCompanyDisplayed(CompanyClicked);\n  }\n  // console.log(CompanyClicked);\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return (\n        <div>\n          <CompanyCard\n            Company={CompanyDisplayed}\n            State={CompanyCardState}\n            onClosed={() => {\n              setCompanyCardState(0);\n            }}\n          />\n          <Map\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            OnCenterChange={OnMapCenterChange}\n            Markers={SurroundingCompany}\n            OnMarkerClick={OnMarkerClick}\n          />\n          <Pointer />\n          <AddButton OnClick={AddItem} />\n          <Place_Definer\n            CompanyCreateState={CompanyCreateState}\n            Address={Address}\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            visible={DefinerVis}\n            OnSumbit={OnPlaceDefinerSubmit}\n            OnClosed={() => {\n              setDefinerVis(false);\n            }}\n            message={DefinerMessage}\n          />\n        </div>\n      );\n    } else {\n      return <Spinner message={Error} />;\n    }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/Loading_Spinner.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyCard.js",["81"],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/Map.js",["82","83"],"import React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport ClickableMarker from \"./CompanyFinderAPI/ClickableMarker\";\n\nconst Map = ({ OnCenterChange, Lat, Lng, Markers, OnMarkerClick }) => {\n  const [Width, setWidth] = useState(document.documentElement.clientWidth);\n  const [Height, setHeight] = useState(document.documentElement.clientHeight);\n  const [Companys, setCompanys] = useState([]);\n  const map = useRef();\n\n  // let map;\n  const mapContainer = useRef(null);\n\n  useEffect(() => {\n    const setWindowSize = () => {\n      setWidth(window.outerWidth);\n      setHeight(window.outerHeight);\n    };\n    window.addEventListener(\"resize\", setWindowSize);\n    return () => {\n      window.removeEventListener(\"resize\", setWindowSize);\n    };\n  });\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZGVubmlzY2hhbmc5MjgiLCJhIjoiY2tzanRjanRiMXpsbDJvbnVxdTgxNHh4byJ9.AcPK9uy9CBN1DUX8g6G-_Q\";\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\", // style URL\n      zoom: 18 // starting zoom\n    });\n    map.current.setCenter([Lng, Lat]);\n    map.current.on(\"move\", () => {\n      OnCenterChange(map.current.getCenter().lat, map.current.getCenter().lng);\n    });\n  }, []);\n\n\n  useEffect(() => {\n    console.log(\"Markers update\")\n    if (Markers === [] || Companys === []) {\n      return\n    } else {\n      Companys.forEach(Company => {\n        Company.remove();\n      });\n      setCompanys(\n        Markers.map((Company) => {\n          return new ClickableMarker({\n            color: \"#FF0000\",\n            anchor: 'bottom',\n            draggable: false\n          }).setLngLat([Company.Lng, Company.Lat])\n            .addTo(map.current)\n            .onClick(() => { OnMarkerClick(Company) });\n        })\n      )\n    }\n  }, [Markers]);\n  // )\n\n  return (\n    <div>\n      <div style={{\n        height: Height,\n        Width: Width\n      }}\n        ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n};\n\nexport default Map;\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/CompanyApi.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/Place_Definer.js",["84","85"],"import React, { useEffect, useState } from \"react\";\nimport ImageSelector from \"./ImageSelector\";\nimport { Transition } from \"semantic-ui-react\";\nimport useSound from 'use-sound';\nimport CreateSuccessSoundEffect from './CreateSuccessSoundEffect.mp3';\nimport CreateFailSoundEffect from './CreateFailSoundEffect.mp3';\n\nconst Place_Definer = ({ visible, CompanyCreateState, message, OnClosed, OnSumbit, Lat, Lng, Address }) => {\n  const ShopTypeOptions = [\n    {\n      value: \"BAR\",\n      name: \"Bar\"\n    },\n    {\n      value: \"RESTR\",\n      name: \"Restaurant\"\n    },\n    {\n      value: \"SMKT\",\n      name: \"Supermarket\"\n    },\n    {\n      value: \"BTQ\",\n      name: \"Boutique\"\n    },\n    {\n      value: \"SCH\",\n      name: \"School\"\n    }\n  ];\n\n  const [ImageSrc, setImageSrc] = useState([]);\n  const [ShopName, setShopName] = useState(\"\");\n  const [ShopType, setShopType] = useState(ShopTypeOptions[0].value);\n  const [ShopDescription, setShopDescription] = useState()\n  const [playSuccess] = useSound(CreateSuccessSoundEffect)\n  const [playFail] = useSound(CreateFailSoundEffect)\n  useEffect(() => {\n    if (CompanyCreateState === 2) {\n      playSuccess();\n    } else if (CompanyCreateState === 3) {\n      playFail();\n    }\n  }, [CompanyCreateState]);\n  const OnShopNameChange = E => {\n    setShopName(E.target.value);\n  };\n\n  const OnShopTypeChange = E => {\n    setShopType(E.target.value);\n  };\n  const OnShopDescriptionChange = E => {\n    setShopDescription(E.target.value);\n  };\n  const OnImageSrcChange = E => {\n    setImageSrc(E);\n  };\n\n  const OnImageDelete = index => {\n    setImageSrc(ImageSrc.filter((e, i) => i != index));\n  };\n\n\n\n  const ShopTypes = ShopTypeOptions.map(Element => {\n    return <option value={Element.value}>{Element.name}</option>;\n  });\n\n  return (\n    <Transition visible={visible} animation=\"fade up\" duration={700}>\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0%\",\n          width: \"100%\"\n        }}\n      >\n        <div className=\"ui segment\">\n          <div className={`ui ${CompanyCreateState === 2 ? \"active\" : \"inactive\"} inverted dimmer`}>\n            <i className=\"big check icon\"></i>\n            {`${ShopName} is created!`}\n          </div>\n          <div className={`ui ${CompanyCreateState === 3 ? \"active\" : \"inactive\"} dimmer`}>\n            <i className=\"inverted big exclamation triangle icon\"></i>\n            <div style={{\n              color: \"white\"\n            }}>\n              {`Create \"${ShopName}\" fail.`}\n            </div>\n            <n />\n            <div style={{\n              color: \"red\"\n            }}>\n              {message}\n            </div>\n          </div>\n          <i\n            onClick={OnClosed}\n            style={{\n              position: \"absolute\",\n              right: \"50%\",\n              transform: \"translate(+50%, -50%) scale(1.3)\"\n            }}\n            className=\"caret down icon\"\n          ></i>\n          <br />\n          <div className=\"ui form\">\n            <div className=\"ui grid\">\n              <div className=\"two column row\">\n                <div className=\"column\">\n                  <div className=\"field\">\n                    <label>Shop name</label>\n                    <input\n                      type=\"text\"\n                      name=\"SHOP-NAME\"\n                      placeholder=\"e.g., Ray's Bar\"\n                      value={ShopName}\n                      onChange={OnShopNameChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"field\">\n                    <label>Shop Type</label>\n                    <select\n                      className=\"ui fluid dropdown\"\n                      onChange={OnShopTypeChange}\n                      value={ShopType}\n                    >\n                      {ShopTypes}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <ImageSelector\n                Value={ImageSrc}\n                onChange={OnImageSrcChange}\n                OnImageDelete={OnImageDelete}\n              />\n              <div className=\"two column row\">\n                <div className=\"fourteen wide column\">\n                  <div className=\"field\">\n                    <label>Description</label>\n                    <textarea\n                      rows=\"1\"\n                      value={ShopDescription}\n                      onChange={OnShopDescriptionChange}\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"two wide column\">\n                  <i\n                    onClick={() => {\n                      console.log(typeof (Address));\n                      OnSumbit({\n                        ShopName: ShopName,\n                        ShopType: ShopType,\n                        ImageSrc: ImageSrc,\n                        ShopDescription: ShopDescription,\n                        Addr: Address,\n                        Lat: Lat,\n                        Lng: Lng\n                      });\n                    }}\n                    className={CompanyCreateState === 0 ? \"paper plane outline icon\" : \"\"}\n                    style={{\n                      transform: \"scale(2)\",\n                      position: \"absolute\",\n                      bottom: \"35%\",\n                      left: \"25%\"\n                    }}\n                  >\n                    <div style={{ zIndex: 10 }} className={`ui mini ${CompanyCreateState === 1 ? \"active\" : \" inactive\"} inline loader`}> </div>\n                  </i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div >\n    </Transition >\n\n  );\n};\n\nexport default Place_Definer;\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Pointer/Pointer.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Pointer/AddBTN.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyFinderAPI/Finder.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Decode_Api/geocode.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/CompanyFinderAPI/ClickableMarker.js",[],"/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Components/ImageViewer.js",["86"],"import React, { useEffect, useState } from 'react';\n\nconst ImageViewer = ({ ImageSrc, LoaderEnable }) => {\n    const [DisplayingImageIndex, setDisplayingImageIndex] = useState(0);\n\n    const OnLeftArrowClicked = () => {\n        if (DisplayingImageIndex === 0) return;\n        setDisplayingImageIndex(DisplayingImageIndex - 1);\n    }\n\n    const OnRigthArrowClicked = () => {\n        if (DisplayingImageIndex === ImageSrc.length - 1) return;\n        setDisplayingImageIndex(DisplayingImageIndex + 1);\n    }\n\n    useEffect(() => {\n        setDisplayingImageIndex(0);\n    }, [LoaderEnable])\n\n    const ImageEmbed = () => {\n        console.log(ImageSrc);\n        if (LoaderEnable === true) {\n            return (\n                <img\n                    style={{\n                        display: 'block',\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        Width: \"auto\",\n                        height: \"auto\"\n                    }}\n                    src={ImageSrc.length !== 0 ? ImageSrc[DisplayingImageIndex] : \"https://www.wddonline.com/content/uploads/2020/08/placeholder-image.png\"}\n                />\n            )\n        } else {\n            return (\n                <div id=\"Image\" className=\"ui segment\"\n                    style={{\n                        display: \"block\",\n                        maxWidth: \"auto\",\n                        Width: \"auto\",\n                        height: \"200px\",\n                    }}\n                >\n                    <div className=\"ui active inverted dimmer\">\n                        <div className=\"ui text loader\">Loading</div>\n                    </div>\n                    <p></p>\n                </div>\n            );\n        }\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"two wide column\">\n                <i\n                    onClick={OnLeftArrowClicked}\n                    style={{\n                        position: \"absolute\",\n\n                        left: '50%',\n                        bottom: '50%',\n                        transform: \"Scale(2)\",\n\n                        cursor: 'pointer'\n                    }}\n                    className=\"caret square left icon\"></i>\n            </div>\n            <div className=\"twelve wide column\">\n                {ImageEmbed()}\n            </div>\n            <div className=\"two wide column\">\n                <i\n                    onClick={OnRigthArrowClicked}\n                    style={{\n                        position: \"absolute\",\n\n                        right: '50%',\n                        bottom: '50%',\n                        transform: \"Scale(2)\",\n                        \n                        cursor: 'pointer'\n                    }}\n                    className=\"caret square right icon\" ></i>\n            </div>\n        </div >\n\n    )\n}\n\nexport default ImageViewer;\n\n\n\n\n\n\n\n\n\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/ImageSelector.js",["87","88"],"import React, { useEffect, useState } from \"react\";\nimport Images_preview from \"./Image_preview\";\nimport ImageEdit from \"./ImageEdit.js\";\n\nconst ImageSelector = ({ Value, onChange, OnImageDelete }) => {\n  const [ImageEditVisibility, setImageEditVisibility] = useState(false);\n\n  const OnImageInputChange = () => {\n    const fileSelector = document.getElementById(\"fileSelector\");\n    const Images = fileSelector.files;\n    let ImageBaseResult = Value;\n    for (let i = 0; i < Images.length; i++) {\n      const reader = new FileReader();\n      reader.readAsDataURL(Images[i]);\n      reader.onload = function() {\n        ImageBaseResult.push(reader.result);\n      };\n    }\n    onChange(ImageBaseResult);\n  };\n\n  const OnImageClicked = () => {\n    setImageEditVisibility(true);\n  };\n\n  const OnImageEditClosed = () => {\n    setImageEditVisibility(false);\n  };\n\n  return (\n    <div className=\"two column row\">\n      <div className=\"eight wide column\">\n        <Images_preview OnClick={OnImageClicked} ImageSrc={Value} />\n      </div>\n      <div className=\"eight wide column\">\n        <label for=\"fileSelector\" className=\"fluid ui small button\">\n          <input\n            type=\"file\"\n            id=\"fileSelector\"\n            className=\"fileSelector\"\n            data-target=\"file-uploader\"\n            accept=\"image/*\"\n            multiple\n            onChange={OnImageInputChange}\n          />\n          <i className=\"fluid images icon\"></i>\n          {\"Add Images\"}\n        </label>\n      </div>\n      <ImageEdit\n        OnClosed={OnImageEditClosed}\n        OnDelete={OnImageDelete}\n        Visible={ImageEditVisibility}\n        ImageSrc={Value}\n      />\n    </div>\n  );\n};\nexport default ImageSelector;\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/ImageEdit.js",["89"],"import React from \"react\";\nimport { Transition } from \"semantic-ui-react\";\nimport \"./ImageEdit.css\";\n\nconst ImageEdit = ({ Visible, ImageSrc, OnDelete, OnClosed }) => {\n  const ImagesShow = ImageSrc.map((Element, index) => {\n    return (\n      <div\n        key={index}\n        style={{ gridAutoColumns: \"auto\", gridAutoRows: \"auto\" }}\n      >\n        <i\n          style={{ zIndex: \"10000\", position: \"relative\", top: \"16%\", left: \"88%\" }}\n          className=\"close icon\"\n          onClick={() => {\n            OnDelete(index);\n          }}\n        ></i>\n        <img key={index} className=\"ui fluid image\" src={Element} />\n      </div>\n    );\n  });\n\n  return (\n    <Transition visible={Visible} animation=\"scale\" duration={500}>\n      <div\n        className=\"ui segment\"\n        style={{\n          zIndex: \"2\",\n          position: \"fixed\",\n\n          top: \"5%\",\n          bottom: \"5%\",\n\n          left: \"5%\",\n          right: \"5%\"\n        }}\n      >\n        <div className=\"image-list\">{ImagesShow}</div>\n        <button\n          style={{ position: \"absolute\", right: \"2.5%\", bottom: \"2.5%\" }}\n          class=\"ui icon button\"\n          onClick={OnClosed}\n        >\n          <i class=\"edit icon\"></i>\n          Finish Edit\n        </button>\n      </div>\n    </Transition>\n  );\n};\n\nexport default ImageEdit;\n","/Users/changdennis/My-Web-Project/Handy-Rat-Map/Handy-Rat-Map-Frontend/src/Place_Define/Image_preview.js",["90","91"],"import React, { useState } from \"react\";\n\nconst Images_preview = ({ ImageSrc, OnClick }) => {\n  let Left = 0;\n\n  if (ImageSrc === null || ImageSrc === undefined) {\n    return <div></div>;\n  }\n\n  const Images_Show = ImageSrc.map((Element, index) => {\n    if (index <= 5) {\n      return <img className=\"ui small image\" key={index} src={Element} />;\n    } else {\n      Left = Math.ceil(Left + 1);\n      return <div></div>;\n    }\n  });\n\n  if (Left === 0) {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={OnClick}\n        className=\"ui mini images\"\n      >\n        {Images_Show}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={OnClick}\n        className=\"ui mini images\"\n      >\n        {Images_Show}\n      </div>\n    );\n  }\n\n  // return <div></div>;\n};\n\nexport default Images_preview;\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":38,"column":22,"nodeType":"98","endLine":49,"endColumn":4},{"ruleId":"96","severity":1,"message":"99","line":69,"column":6,"nodeType":"100","endLine":69,"endColumn":30,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":71,"column":25,"nodeType":"100","endLine":71,"endColumn":27,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":97,"column":13,"nodeType":"106","messageId":"107","endLine":97,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":181,"column":11,"nodeType":"110","messageId":"111","endLine":192,"endColumn":13},{"ruleId":"96","severity":1,"message":"112","line":41,"column":8,"nodeType":"100","endLine":41,"endColumn":17,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":38,"column":6,"nodeType":"100","endLine":38,"endColumn":8,"suggestions":"115"},{"ruleId":"96","severity":1,"message":"116","line":61,"column":6,"nodeType":"100","endLine":61,"endColumn":15,"suggestions":"117"},{"ruleId":"96","severity":1,"message":"118","line":44,"column":6,"nodeType":"100","endLine":44,"endColumn":26,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":60,"column":45,"nodeType":"122","messageId":"123","endLine":60,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":24,"column":17,"nodeType":"110","endLine":33,"endColumn":19},{"ruleId":"104","severity":1,"message":"126","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"127","line":33,"column":9,"nodeType":"110","messageId":"111","endLine":33,"endColumn":69},{"ruleId":"124","severity":1,"message":"125","line":19,"column":9,"nodeType":"110","endLine":19,"endColumn":69},{"ruleId":"104","severity":1,"message":"128","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":12,"column":14,"nodeType":"110","endLine":12,"endColumn":74},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setMarkers'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has missing dependencies: 'CurrentLat', 'CurrentLng', and 'SurroundingCompany.length'. Either include them or remove the dependency array.",["132"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Place_Definer must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","React Hook useEffect has a missing dependency: 'ShopTypeOptions'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'Lat', 'Lng', and 'OnCenterChange'. Either include them or remove the dependency array. If 'OnCenterChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["134"],"React Hook useEffect has missing dependencies: 'Companys' and 'OnMarkerClick'. Either include them or remove the dependency array. If 'OnMarkerClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["135"],"React Hook useEffect has missing dependencies: 'playFail' and 'playSuccess'. Either include them or remove the dependency array.",["136"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","Imported JSX component Images_preview must be in PascalCase or SCREAMING_SNAKE_CASE","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [CurrentLat, CurrentLng, setMarkers]",{"range":"149","text":"150"},"Update the dependencies array to be: [CurrentLat, CurrentLng, SurroundingCompany.length]",{"range":"151","text":"152"},"Update the dependencies array to be: [Company, ShopTypeOptions]",{"range":"153","text":"154"},"Update the dependencies array to be: [Lat, Lng, OnCenterChange]",{"range":"155","text":"156"},"Update the dependencies array to be: [Companys, Markers, OnMarkerClick]",{"range":"157","text":"158"},"Update the dependencies array to be: [CompanyCreateState, playFail, playSuccess]",{"range":"159","text":"160"},[2065,2089],"[CurrentLat, CurrentLng, setMarkers]",[2116,2118],"[CurrentLat, CurrentLng, SurroundingCompany.length]",[899,908],"[Company, ShopTypeOptions]",[1295,1297],"[Lat, Lng, OnCenterChange]",[1850,1859],"[Companys, Markers, OnMarkerClick]",[1225,1245],"[CompanyCreateState, playFail, playSuccess]"]