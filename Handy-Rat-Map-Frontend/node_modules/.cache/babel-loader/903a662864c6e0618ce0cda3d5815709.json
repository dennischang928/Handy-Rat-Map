{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport Spinner from \"./Loading_Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({\n  OnCenterChange,\n  lat,\n  lng\n}) => {\n  _s();\n\n  const mapContainer = useRef(null);\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Error, setError] = useState(null);\n  const [Width, setWidth] = useState(window.innerWidth);\n  const [Height, setHeight] = useState(window.innerHeight);\n  const [map, setmap] = useState(null);\n  const windowSize = useRef(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n  useEffect(() => {\n    const setWindowSize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", setWindowSize);\n    return () => {\n      window.removeEventListener(\"resize\", setWindowSize);\n    };\n  }, [Width, Height]);\n  useEffect(() => {\n    if (map === null && CurrentLng !== null && CurrentLat !== null) {\n      mapboxgl.accessToken = \"pk.eyJ1IjoiZGVubmlzY2hhbmc5MjgiLCJhIjoiY2tzanRjanRiMXpsbDJvbnVxdTgxNHh4byJ9.AcPK9uy9CBN1DUX8g6G-_Q\";\n      setmap(new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // style URL\n        center: [CurrentLng, CurrentLat],\n        // starting position [lng, lat]\n        zoom: 14 // starting zoom\n\n      }));\n    } else if (map !== null) {\n      map.on(\"move\", () => {\n        setCurrentLng(map.getCenter().lng.toFixed(4));\n        setCurrentLat(map.getCenter().lat.toFixed(4));\n      });\n    }\n  });\n\n  if (CurrentLng !== null && CurrentLat !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: Width,\n        height: Height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: Width,\n        height: Height\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        message: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Map, \"TLuHJE25U2l6T2RzQscpM5rHlnA=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/Map.js"],"names":["React","useRef","useEffect","useState","mapboxgl","Spinner","Map","OnCenterChange","lat","lng","mapContainer","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Error","setError","Width","setWidth","window","innerWidth","Height","setHeight","innerHeight","map","setmap","windowSize","setPosition","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","setWindowSize","addEventListener","removeEventListener","accessToken","container","style","center","zoom","on","getCenter","toFixed","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport Spinner from \"./Loading_Spinner\";\nconst Map = ({ OnCenterChange, lat, lng }) => {\n  const mapContainer = useRef(null);\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Error, setError] = useState(null);\n  const [Width, setWidth] = useState(window.innerWidth);\n  const [Height, setHeight] = useState(window.innerHeight);\n  const [map, setmap] = useState(null);\n  const windowSize = useRef(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  useEffect(() => {\n    const setWindowSize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n    window.addEventListener(\"resize\", setWindowSize);\n    return () => {\n      window.removeEventListener(\"resize\", setWindowSize);\n    };\n  }, [Width, Height]);\n\n  useEffect(() => {\n    if (map === null && CurrentLng !== null && CurrentLat !== null) {\n      mapboxgl.accessToken =\n        \"pk.eyJ1IjoiZGVubmlzY2hhbmc5MjgiLCJhIjoiY2tzanRjanRiMXpsbDJvbnVxdTgxNHh4byJ9.AcPK9uy9CBN1DUX8g6G-_Q\";\n\n      setmap(\n        new mapboxgl.Map({\n          container: \"map\",\n          style: \"mapbox://styles/mapbox/streets-v11\", // style URL\n          center: [CurrentLng, CurrentLat], // starting position [lng, lat]\n          zoom: 14 // starting zoom\n        })\n      );\n    } else if (map !== null) {\n      map.on(\"move\", () => {\n        setCurrentLng(map.getCenter().lng.toFixed(4));\n        setCurrentLat(map.getCenter().lat.toFixed(4));\n      });\n    }\n  });\n  if (CurrentLng !== null && CurrentLat !== null) {\n    return <div id=\"map\" style={{ width: Width, height: Height }} />;\n  } else {\n    return (\n      <div style={{ width: Width, height: Height }}>\n        <Spinner message={Error} />\n      </div>\n    );\n  }\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}