{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Error, setError] = useState(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lat);\n    setCurrentLat(Lng);\n  };\n\n  if (CurrentLng !== null && CurrentLat !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        Lat: CurrentLat,\n        Lng: CurrentLng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      message: Error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(App, \"Gy3iHKP3RGctk2y7bP4HGy9Pi+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","Map","Spinner","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Error","setError","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","Lat","Lng"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI;AACVV,MAAAA,aAAa,CAACU,QAAQ,CAACC,MAAT,CAAgBC,SAAjB,CAAb;AACAV,MAAAA,aAAa,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,QAAjB,CAAb;AACD,KAJH,EAKEC,GAAG,IAAI;AACLV,MAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACD,KAPH;AASD,GAVD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGAW,EAAAA,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChClB,IAAAA,aAAa,CAACiB,GAAD,CAAb;AACAf,IAAAA,aAAa,CAACgB,GAAD,CAAb;AACD,GAHD;;AAIA,MAAInB,UAAU,KAAK,IAAf,IAAuBE,UAAU,KAAK,IAA1C,EAAgD;AAC9C,wBACE;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,UAAV;AAAsB,QAAA,GAAG,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAjCD;;GAAML,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Error, setError] = useState(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n  OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lat);\n    setCurrentLat(Lng);\n  };\n  if (CurrentLng !== null && CurrentLat !== null) {\n    return (\n      <div>\n        <Map Lat={CurrentLat} Lng={CurrentLng} />\n      </div>\n    );\n  } else {\n    return <Spinner message={Error} />;\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}