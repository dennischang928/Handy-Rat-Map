{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n  const [Card_State, setCard_State] = useState({\n    id: \"\",\n    Lat: \"\",\n    Lng: \"\",\n    Address: \"\",\n    ShopName: \"\",\n    ShopType: \"\",\n    ImageSrc: []\n  });\n  console.log(\"App Rendering\");\n\n  const OnPlace_DefineChange = CardState => {\n    setCard_State(CardState);\n    console.log(\"OnPlace_DefineChangeCalled\");\n    console.log(CardState);\n  };\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Card_State Change\");\n    console.log(Card_State);\n  }, [Card_State]);\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \"\";\n  };\n\n  const AddItem = () => {\n    setAddress(GetDetailAddress(CurrentLat, CurrentLng));\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          OnCenterChange: OnMapCenterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pointer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n          OnClick: AddItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Place_Definer, {\n          visible: DefinerVis,\n          Card_State: Card_State,\n          onChange: OnPlace_DefineChange,\n          OnClosed: () => {\n            setCard_State({\n              id: \"\",\n              Lat: \"\",\n              Lng: \"\",\n              Address: \"\",\n              ShopName: \"\",\n              ShopType: \"\",\n              ImageSrc: [\"\", \"\"]\n            });\n            setDefinerVis(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        message: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return MapInitialize();\n};\n\n_s(App, \"Gbsk7wioT78ZISuZMYO3+g7MdWk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","Map","Spinner","Pointer","AddButton","Place_Definer","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Address","setAddress","DefinerVis","setDefinerVis","Error","setError","Card_State","setCard_State","id","Lat","Lng","ShopName","ShopType","ImageSrc","console","log","OnPlace_DefineChange","CardState","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","GetDetailAddress","AddItem","MapInitialize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n  const [Card_State, setCard_State] = useState({\n    id: \"\",\n    Lat: \"\",\n    Lng: \"\",\n    Address: \"\",\n    ShopName: \"\",\n    ShopType: \"\",\n    ImageSrc: []\n  });\n\n  console.log(\"App Rendering\");\n\n  const OnPlace_DefineChange = CardState => {\n    setCard_State(CardState);\n    console.log(\"OnPlace_DefineChangeCalled\");\n    console.log(CardState);\n  };\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"Card_State Change\");\n    console.log(Card_State);\n  }, [Card_State]);\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \"\";\n  };\n\n  const AddItem = () => {\n    setAddress(GetDetailAddress(CurrentLat, CurrentLng));\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return (\n        <div>\n          <Map\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            OnCenterChange={OnMapCenterChange}\n          />\n          <Pointer />\n          <AddButton OnClick={AddItem} />\n          <Place_Definer\n            visible={DefinerVis}\n            Card_State={Card_State}\n            onChange={OnPlace_DefineChange}\n            OnClosed={() => {\n              setCard_State({\n                id: \"\",\n                Lat: \"\",\n                Lng: \"\",\n                Address: \"\",\n                ShopName: \"\",\n                ShopType: \"\",\n                ImageSrc: [\"\", \"\"]\n              });\n              setDefinerVis(false);\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <Spinner message={Error} />;\n    }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}