{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Place_Define/Image_preview.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Images_preview = ({\n  ImageSrc,\n  OnClick\n}) => {\n  let Left = 0;\n  console.log(\">>>>>>>>>ImageSrc<<<<<<<<\");\n  console.log(ImageSrc);\n  console.log(\"---------ImageSrc---------\");\n\n  if (ImageSrc !== undefined) {\n    const Images_Show = ImageSrc.map(Element => {\n      // if (index <= 5) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ui small image\",\n        src: Element\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this); // } else {\n      // Left = Math.ceil(Left + 1);\n      // }}\n    });\n\n    if (Left === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: OnClick,\n        className: \"ui mini images\",\n        children: Images_Show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: OnClick,\n        className: \"ui mini images\",\n        children: Images_Show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Images_preview;\nexport default Images_preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images_preview\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Place_Define/Image_preview.js"],"names":["React","useState","Images_preview","ImageSrc","OnClick","Left","console","log","undefined","Images_Show","map","Element","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAChD,MAAIC,IAAI,GAAG,CAAX;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,MAAIJ,QAAQ,KAAKK,SAAjB,EAA4B;AAC1B,UAAMC,WAAW,GAAGN,QAAQ,CAACO,GAAT,CAAaC,OAAO,IAAI;AAC1C;AACA,0BAAO;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAwC,QAAA,GAAG,EAAEA;AAA7C,SAAoC,GAApC;AAAA;AAAA;AAAA;AAAA,cAAP,CAF0C,CAG1C;AACA;AACA;AACD,KANmB,CAApB;;AAQA,QAAIN,IAAI,KAAK,CAAb,EAAgB;AACd,0BACE;AACE,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,OAAO,EAAER,OAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA,kBAKGK;AALH;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD,MAUO;AACL,0BACE;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,OAAO,EAAER,OAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA,kBAKGK;AALH;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtCD;;KAAMP,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Images_preview = ({ ImageSrc, OnClick }) => {\n  let Left = 0;\n\n  console.log(\">>>>>>>>>ImageSrc<<<<<<<<\");\n  console.log(ImageSrc);\n  console.log(\"---------ImageSrc---------\");\n  if (ImageSrc !== undefined) {\n    const Images_Show = ImageSrc.map(Element => {\n      // if (index <= 5) {\n      return <img className=\"ui small image\" key=\"1\" src={Element} />;\n      // } else {\n      // Left = Math.ceil(Left + 1);\n      // }}\n    });\n\n    if (Left === 0) {\n      return (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={OnClick}\n          className=\"ui mini images\"\n        >\n          {Images_Show}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={OnClick}\n          className=\"ui mini images\"\n        >\n          {Images_Show}\n        </div>\n      );\n    }\n  }\n  return <div></div>;\n};\n\nexport default Images_preview;\n"]},"metadata":{},"sourceType":"module"}