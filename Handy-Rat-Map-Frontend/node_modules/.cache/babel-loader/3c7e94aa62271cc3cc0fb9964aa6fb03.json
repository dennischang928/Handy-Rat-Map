{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n  const [State, setState] = useState(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n  useEffect(() => {// console.log(`Lat:${CurrentLat}`);\n    // console.log(`Lng:${CurrentLng}`);\n  });\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \" \";\n  };\n\n  const AddItem = () => {\n    setAddress(GetDetailAddress(CurrentLat, CurrentLng));\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    // if (CurrentLng !== null && CurrentLat !== null) {\n    // initialized\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        Lat: CurrentLat,\n        Lng: CurrentLng,\n        OnCenterChange: OnMapCenterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pointer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        OnClick: AddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Place_Definer, {\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this); // } else {\n    // return <Spinner message={Error} />;\n    // }\n  };\n\n  return MapInitialize();\n};\n\n_s(App, \"lXbA05fmMx02AKIoQTJUwapX8aY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","Map","Spinner","Pointer","AddButton","Place_Definer","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Address","setAddress","DefinerVis","setDefinerVis","Error","setError","State","setState","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","Lat","Lng","GetDetailAddress","AddItem","MapInitialize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMmB,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI;AACVhB,MAAAA,aAAa,CAACgB,QAAQ,CAACC,MAAT,CAAgBC,SAAjB,CAAb;AACAhB,MAAAA,aAAa,CAACc,QAAQ,CAACC,MAAT,CAAgBE,QAAjB,CAAb;AACD,KAJH,EAKEC,GAAG,IAAI;AACLZ,MAAAA,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;AACD,KAPH;AASD,GAVD;;AAYA9B,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACD,GAHQ,CAAT;;AAKA,QAAM+B,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtCxB,IAAAA,aAAa,CAACwB,GAAD,CAAb;AACAtB,IAAAA,aAAa,CAACqB,GAAD,CAAb;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAG,OAAOF,GAAP,EAAYC,GAAZ,KAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,GAAP;AACD,GARD;;AAUA,QAAME,OAAO,GAAG,MAAM;AACpBtB,IAAAA,UAAU,CAACqB,gBAAgB,CAACxB,UAAD,EAAaF,UAAb,CAAjB,CAAV;AACAO,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMqB,aAAa,GAAG,MAAM;AAC1B;AACA;AACA,wBACE;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,GAAG,EAAE1B,UADP;AAEE,QAAA,GAAG,EAAEF,UAFP;AAGE,QAAA,cAAc,EAAEuB;AAHlB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAH0B,CAe1B;AACA;AACA;AACD,GAlBD;;AAoBA,SAAOC,aAAa,EAApB;AACD,CAtED;;GAAM7B,G;;KAAAA,G;AAwEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n  const [State, setState] = useState(null);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  useEffect(() => {\n    // console.log(`Lat:${CurrentLat}`);\n    // console.log(`Lng:${CurrentLng}`);\n  });\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \" \";\n  };\n\n  const AddItem = () => {\n    setAddress(GetDetailAddress(CurrentLat, CurrentLng));\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    // if (CurrentLng !== null && CurrentLat !== null) {\n    // initialized\n    return (\n      <div>\n        <Map\n          Lat={CurrentLat}\n          Lng={CurrentLng}\n          OnCenterChange={OnMapCenterChange}\n        />\n        <Pointer />\n        <AddButton OnClick={AddItem} />\n        <Place_Definer visible={true} />\n      </div>\n    );\n    // } else {\n    // return <Spinner message={Error} />;\n    // }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}