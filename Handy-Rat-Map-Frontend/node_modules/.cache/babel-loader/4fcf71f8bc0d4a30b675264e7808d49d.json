{"ast":null,"code":"import React from\"react\";import{Transition}from\"semantic-ui-react\";import\"./ImageEdit.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ImageEdit=({Visible,ImageSrc,OnDelete,OnClosed})=>{const ImagesShow=ImageSrc.map((Element,index)=>{return/*#__PURE__*/_jsxs(\"div\",{style:{gridAutoColumns:\"auto\",gridAutoRows:\"auto\"},children:[/*#__PURE__*/_jsx(\"i\",{style:{zIndex:\"10000\",position:\"relative\",top:\"16%\",left:\"88%\"},className:\"close icon\",onClick:()=>{OnDelete(index);}}),/*#__PURE__*/_jsx(\"img\",{className:\"ui fluid image\",src:Element},index)]},index);});return/*#__PURE__*/_jsx(Transition,{visible:Visible,animation:\"scale\",duration:500,children:/*#__PURE__*/_jsxs(\"div\",{className:\"ui segment\",style:{zIndex:\"2\",position:\"fixed\",top:\"5%\",bottom:\"5%\",left:\"5%\",right:\"5%\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-list\",children:ImagesShow}),/*#__PURE__*/_jsxs(\"button\",{style:{position:\"absolute\",right:\"2.5%\",bottom:\"2.5%\"},class:\"ui icon button\",onClick:OnClosed,children:[/*#__PURE__*/_jsx(\"i\",{class:\"edit icon\"}),\"Finish Edit\"]})]})});};export default ImageEdit;","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Place_Define/ImageEdit.js"],"names":["React","Transition","ImageEdit","Visible","ImageSrc","OnDelete","OnClosed","ImagesShow","map","Element","index","gridAutoColumns","gridAutoRows","zIndex","position","top","left","bottom","right"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,MAAO,iBAAP,C,wFAEA,KAAMC,CAAAA,SAAS,CAAG,CAAC,CAAEC,OAAF,CAAWC,QAAX,CAAqBC,QAArB,CAA+BC,QAA/B,CAAD,GAA+C,CAC/D,KAAMC,CAAAA,UAAU,CAAGH,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,CAAUC,KAAV,GAAoB,CAClD,mBACE,aAEE,KAAK,CAAE,CAAEC,eAAe,CAAE,MAAnB,CAA2BC,YAAY,CAAE,MAAzC,CAFT,wBAIE,UACE,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAmBC,QAAQ,CAAE,UAA7B,CAAyCC,GAAG,CAAE,KAA9C,CAAqDC,IAAI,CAAE,KAA3D,CADT,CAEE,SAAS,CAAC,YAFZ,CAGE,OAAO,CAAE,IAAM,CACbX,QAAQ,CAACK,KAAD,CAAR,CACD,CALH,EAJF,cAWE,YAAiB,SAAS,CAAC,gBAA3B,CAA4C,GAAG,CAAED,OAAjD,EAAUC,KAAV,CAXF,GACOA,KADP,CADF,CAeD,CAhBkB,CAAnB,CAkBA,mBACE,KAAC,UAAD,EAAY,OAAO,CAAEP,OAArB,CAA8B,SAAS,CAAC,OAAxC,CAAgD,QAAQ,CAAE,GAA1D,uBACE,aACE,SAAS,CAAC,YADZ,CAEE,KAAK,CAAE,CACLU,MAAM,CAAE,GADH,CAELC,QAAQ,CAAE,OAFL,CAILC,GAAG,CAAE,IAJA,CAKLE,MAAM,CAAE,IALH,CAOLD,IAAI,CAAE,IAPD,CAQLE,KAAK,CAAE,IARF,CAFT,wBAaE,YAAK,SAAS,CAAC,YAAf,UAA6BX,UAA7B,EAbF,cAcE,gBACE,KAAK,CAAE,CAAEO,QAAQ,CAAE,UAAZ,CAAwBI,KAAK,CAAE,MAA/B,CAAuCD,MAAM,CAAE,MAA/C,CADT,CAEE,KAAK,CAAC,gBAFR,CAGE,OAAO,CAAEX,QAHX,wBAKE,UAAG,KAAK,CAAC,WAAT,EALF,iBAdF,GADF,EADF,CA2BD,CA9CD,CAgDA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Transition } from \"semantic-ui-react\";\nimport \"./ImageEdit.css\";\n\nconst ImageEdit = ({ Visible, ImageSrc, OnDelete, OnClosed }) => {\n  const ImagesShow = ImageSrc.map((Element, index) => {\n    return (\n      <div\n        key={index}\n        style={{ gridAutoColumns: \"auto\", gridAutoRows: \"auto\" }}\n      >\n        <i\n          style={{ zIndex: \"10000\", position: \"relative\", top: \"16%\", left: \"88%\" }}\n          className=\"close icon\"\n          onClick={() => {\n            OnDelete(index);\n          }}\n        ></i>\n        <img key={index} className=\"ui fluid image\" src={Element} />\n      </div>\n    );\n  });\n\n  return (\n    <Transition visible={Visible} animation=\"scale\" duration={500}>\n      <div\n        className=\"ui segment\"\n        style={{\n          zIndex: \"2\",\n          position: \"fixed\",\n\n          top: \"5%\",\n          bottom: \"5%\",\n\n          left: \"5%\",\n          right: \"5%\"\n        }}\n      >\n        <div className=\"image-list\">{ImagesShow}</div>\n        <button\n          style={{ position: \"absolute\", right: \"2.5%\", bottom: \"2.5%\" }}\n          class=\"ui icon button\"\n          onClick={OnClosed}\n        >\n          <i class=\"edit icon\"></i>\n          Finish Edit\n        </button>\n      </div>\n    </Transition>\n  );\n};\n\nexport default ImageEdit;\n"]},"metadata":{},"sourceType":"module"}