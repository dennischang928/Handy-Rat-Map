{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(0);\n  const [CurrentLat, setCurrentLat] = useState(0);\n  const [Error, setError] = useState(null); // const setPosition = () => {\n  //   window.navigator.geolocation.getCurrentPosition(\n  //     position => {\n  //       setCurrentLng(position.coords.longitude);\n  //       setCurrentLat(position.coords.latitude);\n  //     },\n  //     err => {\n  //       setError(err.message);\n  //     }\n  //   );\n  // };\n  // useEffect(() => {\n  //   setPosition();\n  // }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(\"1\");\n    setCurrentLat(\"1\"); // setCurrentLng(Lat);\n\n    console.log(`Lat:${Lat}`);\n    console.log(`CurrentLat:${CurrentLat}`); // console.log(`Lng:${CurrentLng}`);\n  };\n\n  if (CurrentLng !== null && CurrentLat !== null) {\n    // console.log(\"hi\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        Lat: CurrentLat,\n        Lng: CurrentLng,\n        OnCenterChange: OnMapCenterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      message: Error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(App, \"RVX2AJ+VbECAx8mrZ7d0X7hQmOg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useState","Map","Spinner","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Error","setError","OnMapCenterChange","Lat","Lng","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC,CAHgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMU,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtCP,IAAAA,aAAa,CAAC,GAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,GAAD,CAAb,CAFsC,CAGtC;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAMH,GAAI,EAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaR,UAAW,EAArC,EALsC,CAMtC;AACD,GAPD;;AASA,MAAIF,UAAU,KAAK,IAAf,IAAuBE,UAAU,KAAK,IAA1C,EAAgD;AAC9C;AACA,wBACE;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,GAAG,EAAEA,UADP;AAEE,QAAA,GAAG,EAAEF,UAFP;AAGE,QAAA,cAAc,EAAEM;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAXD,MAWO;AACL,wBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA5CD;;GAAML,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, {useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(0);\n  const [CurrentLat, setCurrentLat] = useState(0);\n  const [Error, setError] = useState(null);\n  \n  // const setPosition = () => {\n  //   window.navigator.geolocation.getCurrentPosition(\n  //     position => {\n  //       setCurrentLng(position.coords.longitude);\n  //       setCurrentLat(position.coords.latitude);\n  //     },\n  //     err => {\n  //       setError(err.message);\n  //     }\n  //   );\n  // };\n\n  // useEffect(() => {\n  //   setPosition();\n  // }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(\"1\");\n    setCurrentLat(\"1\");\n    // setCurrentLng(Lat);\n    console.log(`Lat:${Lat}`);\n    console.log(`CurrentLat:${CurrentLat}`);\n    // console.log(`Lng:${CurrentLng}`);\n  };\n\n  if (CurrentLng !== null && CurrentLat !== null) {\n    // console.log(\"hi\");\n    return (\n      <div>\n        <Map\n          Lat={CurrentLat}\n          Lng={CurrentLng}\n          OnCenterChange={OnMapCenterChange}\n        />\n      </div>\n    );\n  } else {\n    return <Spinner message={Error} />;\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}