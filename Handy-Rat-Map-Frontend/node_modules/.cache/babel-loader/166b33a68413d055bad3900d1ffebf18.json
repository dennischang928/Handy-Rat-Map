{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CompanyApi from \"../CompanyApi\";\nimport geocode from \"../Decode_Api/geocode\";\nimport Finder from \"./CompanyFinderAPI/Finder\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport CompanyCard from \"./CompanyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(\"\");\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [CompanyCreateState, setCompanyCreateState] = useState(0); //Not submit:0, submiting:1, Sucess:2, Fail:3\n\n  const [DefinerMessage, setDefinerMessage] = useState(null);\n  const [SurroundingCompany, setSurroundingCompany] = useState([]);\n  const [Error, setError] = useState(null);\n  const [CompanyCardState, setCompanyCardState] = useState(0);\n  const [CompanyDisplayed, setCompanyDisplayed] = useState();\n\n  const setMarkers = async () => {\n    const Response = await Finder.get(\"/SurroundingCompany\", {\n      params: {\n        Lng: CurrentLng,\n        Lat: CurrentLat\n      }\n    });\n\n    if (SurroundingCompany.length !== Response.data.length) {\n      setSurroundingCompany(Response.data);\n    }\n  };\n\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng, DefinerVis]);\n  useEffect(() => {\n    const TimeoutID = setTimeout(setMarkers, 200);\n    return () => {\n      clearTimeout(TimeoutID);\n    };\n  }, [CurrentLat, CurrentLng]);\n  useEffect(setMarkers, []);\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async ShopDetail => {\n    setCompanyCreateState(1);\n\n    try {\n      const response = await CompanyApi.post(\"/Company/CreateCompany\", ShopDetail);\n      setCompanyCreateState(2);\n    } catch (err) {\n      setCompanyCreateState(3);\n      setDefinerMessage(err.message);\n    }\n\n    setTimeout(() => {\n      setMarkers();\n      setCompanyCreateState(0);\n      setDefinerVis(false);\n      console.log(\"closed\");\n    }, 2000);\n  };\n\n  const GetAndSetDetailAddress = async (Lat, Lng) => {\n    const reponse = await geocode.get(\"\", {\n      params: {\n        latlng: `${Lat},${Lng}`\n      }\n    });\n    console.log(reponse.data.results[0].formatted_address.toString());\n    setAddress(reponse.data.results[0].formatted_address.toString());\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const OnMarkerClick = async e => {\n    setCompanyCardState(1);\n    const Response = await Finder.get(\"/GetCompanyImage\", {\n      params: {\n        id: e._id\n      }\n    });\n    let CompanyClicked = {\n      Lat: null,\n      Lng: null,\n      ShopDetail: null,\n      ShopType: null,\n      ShopDescription: null,\n      Addr: null,\n      _id: null,\n      ImageSrc: null\n    };\n    CompanyClicked.Lat = e.Lat;\n    CompanyClicked.Lng = e.Lng;\n    CompanyClicked.ShopDetail = e.ShopDetail;\n    CompanyClicked.ShopType = e.ShopType;\n    CompanyClicked.ShopDescription = e.ShopDescription;\n    CompanyClicked.Addr = e.Addr;\n    CompanyClicked._id = e._id;\n    CompanyClicked.ImageSrc = Response.data.ImageSrc;\n    setCompanyCardState(2);\n  }; // console.log(CompanyClicked);\n\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CompanyCard, {\n          Company: CompanyClicked,\n          State: CompanyCardState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          OnCenterChange: OnMapCenterChange,\n          Markers: SurroundingCompany,\n          OnMarkerClick: OnMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pointer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n          OnClick: AddItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Place_Definer, {\n          CompanyCreateState: CompanyCreateState,\n          Address: Address,\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          visible: DefinerVis,\n          OnSumbit: OnPlaceDefinerSubmit,\n          OnClosed: () => {\n            setDefinerVis(false);\n          },\n          message: DefinerMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        message: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return MapInitialize();\n};\n\n_s(App, \"27+iRCxqcpcMA7smBfNlrboeqok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","CompanyApi","geocode","Finder","Map","Spinner","Pointer","AddButton","Place_Definer","CompanyCard","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Address","setAddress","DefinerVis","setDefinerVis","CompanyCreateState","setCompanyCreateState","DefinerMessage","setDefinerMessage","SurroundingCompany","setSurroundingCompany","Error","setError","CompanyCardState","setCompanyCardState","CompanyDisplayed","setCompanyDisplayed","setMarkers","Response","get","params","Lng","Lat","length","data","TimeoutID","setTimeout","GetAndSetDetailAddress","clearTimeout","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","OnPlaceDefinerSubmit","ShopDetail","response","post","console","log","reponse","latlng","results","formatted_address","toString","AddItem","OnMarkerClick","e","id","_id","CompanyClicked","ShopType","ShopDescription","Addr","ImageSrc","MapInitialize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport CompanyApi from \"../CompanyApi\";\nimport geocode from \"../Decode_Api/geocode\";\nimport Finder from \"./CompanyFinderAPI/Finder\";\n\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport CompanyCard from \"./CompanyCard\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(\"\");\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [CompanyCreateState, setCompanyCreateState] = useState(0); //Not submit:0, submiting:1, Sucess:2, Fail:3\n  const [DefinerMessage, setDefinerMessage] = useState(null);\n  const [SurroundingCompany, setSurroundingCompany] = useState([]);\n  const [Error, setError] = useState(null);\n  const [CompanyCardState, setCompanyCardState] = useState(0);\n  const [CompanyDisplayed, setCompanyDisplayed] = useState();\n\n\n\n  const setMarkers = async () => {\n    const Response = await Finder.get(\"/SurroundingCompany\", {\n      params: {\n        Lng: CurrentLng,\n        Lat: CurrentLat\n      }\n    })\n    if (SurroundingCompany.length !== Response.data.length) {\n      setSurroundingCompany(Response.data);\n    }\n  }\n\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng, DefinerVis])\n\n  useEffect(() => {\n    const TimeoutID = setTimeout(setMarkers, 200);\n    return () => {\n      clearTimeout(TimeoutID);\n    };\n  }, [CurrentLat, CurrentLng])\n\n  useEffect(setMarkers, [])\n\n  useEffect(() => { setPosition() }, [])\n\n\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async (ShopDetail) => {\n    setCompanyCreateState(1);\n    try {\n      const response = await CompanyApi.post(\"/Company/CreateCompany\", ShopDetail)\n      setCompanyCreateState(2);\n    } catch (err) {\n      setCompanyCreateState(3);\n      setDefinerMessage(err.message);\n    }\n    setTimeout(() => {\n      setMarkers();\n      setCompanyCreateState(0);\n      setDefinerVis(false);\n      console.log(\"closed\");\n    }, 2000);\n  };\n\n  const GetAndSetDetailAddress = async (Lat, Lng) => {\n    const reponse = await geocode.get(\"\", {\n      params: {\n        latlng: `${Lat},${Lng}`\n      }\n    });\n    console.log(reponse.data.results[0].formatted_address.toString());\n\n    setAddress(reponse.data.results[0].formatted_address.toString());\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const OnMarkerClick = async (e) => {\n\n    setCompanyCardState(1);\n\n    const Response = await Finder.get(\"/GetCompanyImage\",\n      {\n        params: {\n          id: e._id\n        }\n      }\n    )\n\n    let CompanyClicked = {\n      Lat: null,\n      Lng: null,\n      ShopDetail: null,\n      ShopType: null,\n      ShopDescription: null,\n      Addr: null,\n      _id: null,\n      ImageSrc: null\n    };\n\n    CompanyClicked.Lat = e.Lat;\n    CompanyClicked.Lng = e.Lng;\n    CompanyClicked.ShopDetail = e.ShopDetail;\n    CompanyClicked.ShopType = e.ShopType;\n    CompanyClicked.ShopDescription = e.ShopDescription;\n    CompanyClicked.Addr = e.Addr;\n    CompanyClicked._id = e._id;\n    CompanyClicked.ImageSrc = Response.data.ImageSrc;\n\n    setCompanyCardState(2);\n  }\n  // console.log(CompanyClicked);\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return (\n        <div>\n          <CompanyCard Company={CompanyClicked} State={CompanyCardState} />\n          <Map\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            OnCenterChange={OnMapCenterChange}\n            Markers={SurroundingCompany}\n            OnMarkerClick={OnMarkerClick}\n          />\n          <Pointer />\n          <AddButton OnClick={AddItem} />\n          <Place_Definer\n            CompanyCreateState={CompanyCreateState}\n            Address={Address}\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            visible={DefinerVis}\n            OnSumbit={OnPlaceDefinerSubmit}\n            OnClosed={() => {\n              setDefinerVis(false);\n            }}\n            message={DefinerMessage}\n          />\n        </div>\n      );\n    } else {\n      return <Spinner message={Error} />;\n    }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}