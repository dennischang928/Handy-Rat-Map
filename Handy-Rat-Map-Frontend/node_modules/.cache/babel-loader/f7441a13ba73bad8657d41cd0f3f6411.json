{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Images_preview from\"./Image_preview\";import ImageEdit from\"./ImageEdit.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ImageSelector=({Value,onChange,OnImageDelete})=>{const[ImageEditVisibility,setImageEditVisibility]=useState(false);const OnImageInputChange=()=>{const fileSelector=document.getElementById(\"fileSelector\");const Images=fileSelector.files;let ImageBaseResult=Value;for(let i=0;i<Images.length;i++){const reader=new FileReader();reader.readAsDataURL(Images[i]);reader.onload=function(){ImageBaseResult.push(reader.result);};}onChange(ImageBaseResult);};const OnImageClicked=()=>{setImageEditVisibility(true);};const OnImageEditClosed=()=>{setImageEditVisibility(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"two column row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"eight wide column\",children:/*#__PURE__*/_jsx(Images_preview,{OnClick:OnImageClicked,ImageSrc:Value})}),/*#__PURE__*/_jsx(\"div\",{className:\"eight wide column\",children:/*#__PURE__*/_jsxs(\"label\",{for:\"fileSelector\",className:\"fluid ui small button\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileSelector\",className:\"fileSelector\",\"data-target\":\"file-uploader\",accept:\"image/*\",capture:\"capture\",multiple:true,onChange:OnImageInputChange}),/*#__PURE__*/_jsx(\"i\",{className:\"fluid images icon\"}),\"Add Images\"]})}),/*#__PURE__*/_jsx(ImageEdit,{OnClosed:OnImageEditClosed,OnDelete:OnImageDelete,Visible:ImageEditVisibility,ImageSrc:Value})]});};export default ImageSelector;","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Place_Define/ImageSelector.js"],"names":["React","useEffect","useState","Images_preview","ImageEdit","ImageSelector","Value","onChange","OnImageDelete","ImageEditVisibility","setImageEditVisibility","OnImageInputChange","fileSelector","document","getElementById","Images","files","ImageBaseResult","i","length","reader","FileReader","readAsDataURL","onload","push","result","OnImageClicked","OnImageEditClosed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,iBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,C,wFAEA,KAAMC,CAAAA,aAAa,CAAG,CAAC,CAAEC,KAAF,CAASC,QAAT,CAAmBC,aAAnB,CAAD,GAAwC,CAC5D,KAAM,CAACC,mBAAD,CAAsBC,sBAAtB,EAAgDR,QAAQ,CAAC,KAAD,CAA9D,CAEA,KAAMS,CAAAA,kBAAkB,CAAG,IAAM,CAC/B,KAAMC,CAAAA,YAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB,CACA,KAAMC,CAAAA,MAAM,CAAGH,YAAY,CAACI,KAA5B,CACA,GAAIC,CAAAA,eAAe,CAAGX,KAAtB,CACA,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,MAAM,CAACI,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,KAAME,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,aAAP,CAAqBP,MAAM,CAACG,CAAD,CAA3B,EACAE,MAAM,CAACG,MAAP,CAAgB,UAAW,CACzBN,eAAe,CAACO,IAAhB,CAAqBJ,MAAM,CAACK,MAA5B,EACD,CAFD,CAGD,CACDlB,QAAQ,CAACU,eAAD,CAAR,CACD,CAZD,CAcA,KAAMS,CAAAA,cAAc,CAAG,IAAM,CAC3BhB,sBAAsB,CAAC,IAAD,CAAtB,CACD,CAFD,CAIA,KAAMiB,CAAAA,iBAAiB,CAAG,IAAM,CAC9BjB,sBAAsB,CAAC,KAAD,CAAtB,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,YAAK,SAAS,CAAC,mBAAf,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEgB,cAAzB,CAAyC,QAAQ,CAAEpB,KAAnD,EADF,EADF,cAIE,YAAK,SAAS,CAAC,mBAAf,uBACE,eAAO,GAAG,CAAC,cAAX,CAA0B,SAAS,CAAC,uBAApC,wBACE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,cAFL,CAGE,SAAS,CAAC,cAHZ,CAIE,cAAY,eAJd,CAKE,MAAM,CAAC,SALT,CAME,OAAO,CAAC,SANV,CAOE,QAAQ,KAPV,CAQE,QAAQ,CAAEK,kBARZ,EADF,cAWE,UAAG,SAAS,CAAC,mBAAb,EAXF,CAYG,YAZH,GADF,EAJF,cAoBE,KAAC,SAAD,EACE,QAAQ,CAAEgB,iBADZ,CAEE,QAAQ,CAAEnB,aAFZ,CAGE,OAAO,CAAEC,mBAHX,CAIE,QAAQ,CAAEH,KAJZ,EApBF,GADF,CA6BD,CAtDD,CAuDA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Images_preview from \"./Image_preview\";\nimport ImageEdit from \"./ImageEdit.js\";\n\nconst ImageSelector = ({ Value, onChange, OnImageDelete }) => {\n  const [ImageEditVisibility, setImageEditVisibility] = useState(false);\n\n  const OnImageInputChange = () => {\n    const fileSelector = document.getElementById(\"fileSelector\");\n    const Images = fileSelector.files;\n    let ImageBaseResult = Value;\n    for (let i = 0; i < Images.length; i++) {\n      const reader = new FileReader();\n      reader.readAsDataURL(Images[i]);\n      reader.onload = function() {\n        ImageBaseResult.push(reader.result);\n      };\n    }\n    onChange(ImageBaseResult);\n  };\n\n  const OnImageClicked = () => {\n    setImageEditVisibility(true);\n  };\n\n  const OnImageEditClosed = () => {\n    setImageEditVisibility(false);\n  };\n\n  return (\n    <div className=\"two column row\">\n      <div className=\"eight wide column\">\n        <Images_preview OnClick={OnImageClicked} ImageSrc={Value} />\n      </div>\n      <div className=\"eight wide column\">\n        <label for=\"fileSelector\" className=\"fluid ui small button\">\n          <input\n            type=\"file\"\n            id=\"fileSelector\"\n            className=\"fileSelector\"\n            data-target=\"file-uploader\"\n            accept=\"image/*\"\n            capture=\"capture\"\n            multiple\n            onChange={OnImageInputChange}\n          />\n          <i className=\"fluid images icon\"></i>\n          {\"Add Images\"}\n        </label>\n      </div>\n      <ImageEdit\n        OnClosed={OnImageEditClosed}\n        OnDelete={OnImageDelete}\n        Visible={ImageEditVisibility}\n        ImageSrc={Value}\n      />\n    </div>\n  );\n};\nexport default ImageSelector;\n"]},"metadata":{},"sourceType":"module"}