{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CompanyApi from \"../CompanyApi\";\nimport geocode from \"../Decode_Api/geocode\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(\"\");\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [CompanyCreateState, setCompanyCreateState] = useState(0); //Not submit:0, submiting:1, Sucess:2, Fail:3\n\n  const [DefinerMessage, setDefinerMessage] = useState(null);\n  const [Error, setError] = useState(null);\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng, DefinerVis]);\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng]);\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async ShopDetail => {\n    setCompanyCreateState(1);\n\n    try {\n      const response = await CompanyApi.post(\"/Company/CreateCompany\", ShopDetail);\n      setCompanyCreateState(2);\n    } catch (err) {\n      setCompanyCreateState(3);\n      setDefinerMessage(err.message);\n    }\n\n    setTimeout(() => {\n      setCompanyCreateState(0);\n      setDefinerVis(false);\n      console.log(\"closed\");\n    }, 2000);\n  };\n\n  const GetAndSetDetailAddress = async (Lat, Lng) => {\n    const reponse = await geocode.get(\"\", {\n      params: {\n        latlng: `${Lat},${Lng}`\n      }\n    });\n    console.log(reponse.data.results[0].formatted_address.toString());\n    setAddress(reponse.data.results[0].formatted_address.toString());\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          OnCenterChange: OnMapCenterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pointer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n          OnClick: AddItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Place_Definer, {\n          CompanyCreateState: CompanyCreateState,\n          Address: Address,\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          visible: DefinerVis,\n          OnSumbit: OnPlaceDefinerSubmit,\n          OnClosed: () => {\n            setDefinerVis(false);\n          },\n          message: DefinerMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        message: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return MapInitialize();\n};\n\n_s(App, \"9NQubcjQZmuVzW4L7S+zqaD+uuo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","CompanyApi","geocode","Map","Spinner","Pointer","AddButton","Place_Definer","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Address","setAddress","DefinerVis","setDefinerVis","CompanyCreateState","setCompanyCreateState","DefinerMessage","setDefinerMessage","Error","setError","TimeoutID","setTimeout","GetAndSetDetailAddress","clearTimeout","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","Lat","Lng","OnPlaceDefinerSubmit","ShopDetail","response","post","console","log","reponse","get","params","latlng","data","results","formatted_address","toString","AddItem","MapInitialize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport CompanyApi from \"../CompanyApi\";\nimport geocode from \"../Decode_Api/geocode\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\n\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(\"\");\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [CompanyCreateState, setCompanyCreateState] = useState(0); //Not submit:0, submiting:1, Sucess:2, Fail:3\n  const [DefinerMessage, setDefinerMessage] = useState(null);\n  const [Error, setError] = useState(null);\n\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng, DefinerVis])\n\n  useEffect(() => {\n    if (DefinerVis === true) {\n      setCompanyCreateState(1);\n      const TimeoutID = setTimeout(() => {\n        GetAndSetDetailAddress(CurrentLat, CurrentLng);\n        setCompanyCreateState(0);\n      }, 800);\n      return () => {\n        clearTimeout(TimeoutID);\n      };\n    }\n  }, [CurrentLat, CurrentLng])\n\n\n  useEffect(() => { setPosition() }, [])\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async (ShopDetail) => {\n    setCompanyCreateState(1);\n    try {\n      const response = await CompanyApi.post(\"/Company/CreateCompany\", ShopDetail)\n      setCompanyCreateState(2);\n    } catch (err) {\n      setCompanyCreateState(3);\n      setDefinerMessage(err.message);\n    }\n    setTimeout(() => {\n      setCompanyCreateState(0);\n      setDefinerVis(false);\n      console.log(\"closed\");\n    }, 2000);\n  };\n\n  const GetAndSetDetailAddress = async (Lat, Lng) => {\n    const reponse = await geocode.get(\"\", {\n      params: {\n        latlng: `${Lat},${Lng}`\n      }\n    });\n    console.log(reponse.data.results[0].formatted_address.toString());\n\n    setAddress(reponse.data.results[0].formatted_address.toString());\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return (\n        <div>\n          <Map\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            OnCenterChange={OnMapCenterChange}\n          />\n          <Pointer />\n          <AddButton OnClick={AddItem} />\n          <Place_Definer\n            CompanyCreateState={CompanyCreateState}\n            Address={Address}\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            visible={DefinerVis}\n            OnSumbit={OnPlaceDefinerSubmit}\n            OnClosed={() => {\n              setDefinerVis(false);\n            }}\n            message={DefinerMessage}\n          />\n        </div>\n      );\n    } else {\n      return <Spinner message={Error} />;\n    }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}