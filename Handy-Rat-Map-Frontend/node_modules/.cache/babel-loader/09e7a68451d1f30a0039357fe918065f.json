{"ast":null,"code":"var _jsxFileName = \"/Users/changdennis/competition_2020/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport CompanyApi from \"../CompanyApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n  useEffect(() => {\n    console.log(\"App Rendering\");\n  });\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLng(position.coords.longitude);\n      setCurrentLat(position.coords.latitude);\n    }, err => {\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async ShopDetail => {\n    // console.log(ShopDetail);\n    const reponse = await CompanyApi.get(\"/SurroundingCompany\", {\n      data: ShopDetail\n    });\n    console.log(reponse);\n  };\n\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \"catchphrase\";\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          OnCenterChange: OnMapCenterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pointer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n          OnClick: AddItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Place_Definer, {\n          Lat: CurrentLat,\n          Lng: CurrentLng,\n          visible: DefinerVis,\n          OnSumbit: OnPlaceDefinerSubmit,\n          OnClosed: () => {\n            setDefinerVis(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        message: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return MapInitialize();\n};\n\n_s(App, \"VX9bdUhTIZ+ku8mgh8cfebGHJ7Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changdennis/competition_2020/src/Components/App.js"],"names":["React","useEffect","useState","Map","Spinner","Pointer","AddButton","Place_Definer","CompanyApi","App","CurrentLng","setCurrentLng","CurrentLat","setCurrentLat","Address","setAddress","DefinerVis","setDefinerVis","Error","setError","console","log","setPosition","window","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","OnMapCenterChange","Lat","Lng","OnPlaceDefinerSubmit","ShopDetail","reponse","get","data","GetDetailAddress","AddItem","MapInitialize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Map from \"./Map\";\nimport Spinner from \"./Loading_Spinner\";\nimport Pointer from \"../Pointer/Pointer\";\nimport AddButton from \"../Pointer/AddBTN\";\nimport Place_Definer from \"../Place_Define/Place_Definer\";\nimport CompanyApi from \"../CompanyApi\";\n\nconst App = () => {\n  const [CurrentLng, setCurrentLng] = useState(null);\n  const [CurrentLat, setCurrentLat] = useState(null);\n  const [Address, setAddress] = useState(null);\n  const [DefinerVis, setDefinerVis] = useState(false);\n  const [Error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log(\"App Rendering\");\n  });\n\n  const setPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setCurrentLng(position.coords.longitude);\n        setCurrentLat(position.coords.latitude);\n      },\n      err => {\n        setError(err.message);\n      }\n    );\n  };\n\n  useEffect(() => {\n    setPosition();\n  }, []);\n\n  const OnMapCenterChange = (Lat, Lng) => {\n    setCurrentLng(Lng);\n    setCurrentLat(Lat);\n  };\n\n  const OnPlaceDefinerSubmit = async (ShopDetail) => {\n    // console.log(ShopDetail);\n    const reponse = await CompanyApi.get(\"/SurroundingCompany\", {\n      data: ShopDetail\n    });\n    console.log(reponse);\n  };\n  const GetDetailAddress = async (Lat, Lng) => {\n    // const reponse = await geocode.get(\"\", {\n    //   params: {\n    //     latlng: `${Lat},${Lng}`\n    //   }\n    // });\n    // return reponse.data.results[0].formatted_address;\n    return \"catchphrase\";\n  };\n\n  const AddItem = () => {\n    setDefinerVis(true);\n  };\n\n  const MapInitialize = () => {\n    if (CurrentLng !== null && CurrentLat !== null) {\n      // initialized\n      return (\n        <div>\n          <Map\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            OnCenterChange={OnMapCenterChange}\n          />\n          <Pointer />\n          <AddButton OnClick={AddItem} />\n          <Place_Definer\n            Lat={CurrentLat}\n            Lng={CurrentLng}\n            visible={DefinerVis}\n            OnSumbit={OnPlaceDefinerSubmit}\n            OnClosed={() => {\n              setDefinerVis(false);\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <Spinner message={Error} />;\n    }\n  };\n\n  return MapInitialize();\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}